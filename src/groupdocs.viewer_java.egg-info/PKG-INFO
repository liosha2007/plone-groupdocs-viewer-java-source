Metadata-Version: 1.1
Name: groupdocs.viewer-java
Version: 1.0.0
Summary: GroupDocs Viewer for Java plugin for Plone CMS
Home-page: http://svn.plone.org/svn/collective/
Author: UNKNOWN
Author-email: UNKNOWN
License: gpl
Description: .. contents::
        
        GroupDocs Viewer_java plugin for Plone
        =============================
        
        This plugin is developed by the GroupDocs marketplace team. It allows you to easily integrate the GroupDocs Viewer_java app into your Plone website. With this application, you can easily embed business documents, such as contracts and invoices into your Plon web pages and then send them to your partners/clients so that they can sign the documents online, from their web browsers. This way you can easily [collect viewer_javas online](http://groupdocs.com/apps/viewer_java), without the need of printing, scanning and faxing them.   
        
        ###Plugin installation steps:
        
        If the plugin is only available on GitHub (not released to PyPi yet), it can be installed with a build-out by following these steps:
        
        * Create a groupdocs.viewer_java directory under the C:\Plone42\src\ folder.
        * Download the plugin files from GitHub into the folder created.
        * Change the buildout.cfg file as following: 1. Add the “groupdocs.viewer_java” record into the "eggs =" section. 2. Add the “src/groupdocs.viewer_java” record into the "develop =" section.
        * Run the buildout .\bin\buildout.exe file from within the Plone installation folder (For example, C:\Plone42).
        * Restart Plone.
        * Go to Admin->Site setup (http://localhost:8080/PloneGD/@@overview-controlpanel)
        * Open the Add-ons section:  http://localhost:8080/PloneGD/prefs_install_products_form
        * Find the GroupDocs Viewer_java 1.0 add-on, then check and activate it.
        
        ###Using plugin:
        * Modify or create a new page
        * Click on the “Manage Portlets” link: http://screencast.com/t/fbjWrqCJuCfP 
        * Click on the “Add portlet...” dropbox and select the GroupDocs Viewer_java portlet: http://screencast.com/t/fAAlxv1dL 
        * Configure portlet's parameters and press the “Save” button: http://screencast.com/t/zJW3kiyMrW 
        * Open the created page (http://localhost:8080/PloneGD/gd-test). GroupDocs Viewer should appear in the portlet region now: http://screencast.com/t/VMd3UZc5 
        
        ###[Sign, Manage, Annotate, Assemble, Compare and Convert Documents with GroupDocs](http://groupdocs.com)
        1. [Sign documents online with GroupDocs Viewer_java](http://groupdocs.com/apps/viewer_java)
        2. [PDF, Word and Image Annotation with GroupDocs Annotation](http://groupdocs.com/apps/annotation)
        3. [Online DOC, DOCX, PPT Document Comparison with GroupDocs Comparison](http://groupdocs.com/apps/comparison)
        4. [Online Document Management with GroupDocs Dashboard](http://groupdocs.com/apps/dashboard)
        5. [Doc to PDF, Doc to Docx, PPT to PDF, and other Document Conversions with GroupDocs Viewer](http://groupdocs.com/apps/viewer)
        6. [Online Document Automation with GroupDocs Assembly](http://groupdocs.com/apps/assembly)
        
        ###Created by [GroupDocs Marketplace Team]( http://groupdocs.com/marketplace/ ).
        
        Change history
        **************
        
        Changelog
        =========
        
        1.0.0 Created plugin
        --------------------
        
        - Package created using templer
          []
        Detailed Documentation
        **********************
        
        Introduction
        ============
        
        This is a full-blown functional test. The emphasis here is on testing what
        the user may input and see, and the system is largely tested as a black box.
        We use PloneTestCase to set up this test as well, so we have a full Plone site
        to play with. We *can* inspect the state of the portal, e.g. using 
        self.portal and self.folder, but it is often frowned upon since you are not
        treating the system as a black box. Also, if you, for example, log in or set
        roles using calls like self.setRoles(), these are not reflected in the test
        browser, which runs as a separate session.
        
        Being a doctest, we can tell a story here.
        
        First, we must perform some setup. We use the testbrowser that is shipped
        with Five, as this provides proper Zope 2 integration. Most of the 
        documentation, though, is in the underlying zope.testbrower package.
        
            >>> from Products.Five.testbrowser import Browser
            >>> browser = Browser()
            >>> portal_url = self.portal.absolute_url()
        
        The following is useful when writing and debugging testbrowser tests. It lets
        us see all error messages in the error_log.
        
            >>> self.portal.error_log._ignored_exceptions = ()
        
        With that in place, we can go to the portal front page and log in. We will
        do this using the default user from PloneTestCase:
        
            >>> from Products.PloneTestCase.setup import portal_owner, default_password
        
        Because add-on themes or products may remove or hide the login portlet, this test will use the login form that comes with plone.  
        
            >>> browser.open(portal_url + '/login_form')
            >>> browser.getControl(name='__ac_name').value = portal_owner
            >>> browser.getControl(name='__ac_password').value = default_password
            >>> browser.getControl(name='submit').click()
        
        Here, we set the value of the fields on the login form and then simulate a
        submit click.  We then ensure that we get the friendly logged-in message:
        
            >>> "You are now logged in" in browser.contents
            True
        
        Finally, let's return to the front page of our site before continuing
        
            >>> browser.open(portal_url)
        
        -*- extra stuff goes here -*-
        
        
        Contributors
        ************
        
        Note:  place names and roles of the people who contribute to this package
               in this file, one to a line, like so:
        
        - Marketplace Team
        
        Download
        ********
        
Platform: UNKNOWN
Classifier: Framework :: Plone
Classifier: Intended Audience :: Developers
